<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><atom:link href="http://zmwangx.github.io/rss.xml" rel="self" type="application/rss+xml"/><title>dl? cmplnts?</title><link>http://zmwangx.github.io/</link><description>Zhiming Wang's personal blog</description><language>en-us</language><managingEditor>zmwangx@gmail.com (Zhiming Wang)</managingEditor><webMaster>zmwangx@gmail.com (Zhiming Wang)</webMaster><pubDate>Tue, 27 Oct 2015 10:07:19 GMT</pubDate><lastBuildDate>Tue, 27 Oct 2015 10:07:19 GMT</lastBuildDate><generator>pyblog (https://github.com/zmwangx/zmwangx.github.io)</generator><docs>https://validator.w3.org/feed/docs/rss2.html</docs><image><url>http://zmwangx.github.io/img/icon-100.png</url><title>dl? cmplnts?</title><link>http://zmwangx.github.io/</link><width>100</width><height>100</height></image><item><title>AT&amp;T to Pure TalkUSA, one month later</title><link>http://zmwangx.github.io/blog/2015-10-26-att-to-pure-talkusa-one-month-later.html</link><description><![CDATA[

<p><strong>TL;DR</strong>: If you have questions about Pure TalkUSA unanswered by the <a href="https://www.puretalkusa.com/cell-phones-sim-cards.php">official FAQ</a>, I have some information for you starting from the section "<a href="http://zmwangx.github.io/blog/2015-10-26-att-to-pure-talkusa-one-month-later.html#migration-experience">migration experience</a>".</p>
<hr/>
<p>I became an AT&amp;T customer days after arriving in the U.S., and stayed one for three years. The service was okay (I'm not a picky customer), but the pricing was ridiculous. I was paying somewhere between $50 and $60 per month for an AT&amp;T Next plan, with unlimited talk and text and a mere 300 MB of data, phone installments <em>not</em> included (which I was paying the full price anyway). That's actually below average; see <a href="https://zmwangx.github.io/blog/2014-11-10-average-phone-plan-in-the-u-dot-s-costs-ten-time-as-much-as-that-in-the-u-dot-k.html">average phone plan in the U.S. costs ten time as much as that in the U.K.</a>. I could save a bit by joining a family plan (or more precisely, "data share plan"), but then I would lose control over my line and account, which have proven to be very annoying when I needed to upgrade, or otherwise be serviced.</p>
<p>The biggest concern was that I didn't really need unlimited talk and text, so I wasn't using what I was paying for. These days we have too many channels of communications, most of them free. My monthly talk usage was usually around a hundred minutes or less, so I was basically paying a few <em>dimes</em> per minute. Which was like being robbed.</p>
<p>Then I heard about <a href="https://www.puretalkusa.com/">Pure TalkUSA</a> &#8212; an AT&amp;T <a href="https://en.wikipedia.org/wiki/Mobile_virtual_network_operator">MVNO</a> &#8212; from one of my friends. Pure Talk offers <a href="https://www.puretalkusa.com/cell-plans.php">cheap limited plans</a><a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-26-att-to-pure-talkusa-one-month-later.html#fn1" id="fnref1"><sup>1</sup></a> that looked appealing to me. It uses AT&amp;T's network, so for me, the only thing I would lose by switching was part of my monthly expenses, to which I wouldn't object. So I switched last month. Now that I've been on Pure Talk's network for a month, I'll try to talk about the good and bad, as well as some migration caveats, since information is sparse on the Internet. Note: I'm not comparing Pure TalkUSA to other AT&amp;T MVNOs, since I know nothing about any of them.</p>
<p><em>Disclaimer before I start: I can't guarantee that information provided here is accurate (I only speak from the experience of a single customer, that is myself, although I'll try not to make unfounded claims), and I didn't consult Pure TalkUSA before publishing this post, so please don't hold me accountable for anything.</em></p>
<h2 id="migration-experience">
Migration experience
</h2>
<p>A few tips about migration from AT&amp;T:</p>
<ul>
<li><p>About unlocking: After allegedly unlocking your AT&amp;T phone, naturally you would want to make sure it is actually unlocked before ordering a Pure Talk SIM. And you'll find a lot of guides when you google "check if iPhone is unlocked". I'll just tell you this: don't trust those guides. iOS is constantly changing, and the only guaranteed check is to plug in your new SIM. To this day my General-&gt;About-&gt;Carrier shows AT&amp;T, although I'm happily using Pure Talk's network.</p></li>
<li><p>Pure Talk ships your SIM card using USPS (they don't have physical stores), which is slow and expensive. However, I got my SIM much earlier than the estimated delivery date. Not sure if it's a coincidence. Probably location-dependent.</p></li>
<li><p>Porting number: You can choose to port your number during activation, whether you're calling or doing it online (filling out a few webforms). Beware that you must not have cancelled your AT&amp;T service at the time of porting. The porting system was actually down for two days (customer support was very polite and kept apologizing although I said it didn't matter), and on the third day I used the webform but got an error in the end due to the wrong AT&amp;T account number (there's an account number associated to each account &#8212; different from the phone number &#8212; that I've never heard of or used, and I had to call AT&amp;T to extract that info). After acquiring the account number, I called Pure again and the porting process finished almost in an instant. I swapped in the new SIM card (the phone has been unlocked) and was able to make calls after a few seconds.</p></li>
<li><p>About AT&amp;T cancellation: Porting the number will automatically cancel your service with AT&amp;T, so you don't need to call them for cancellation.</p></li>
</ul>
<p>An anecdote here: I initially feared the usual customer retention bullshit when I tried to cancel my AT&amp;T service through online chat (I didn't know about automatic cancellation at that time), but there was none. Representative was very polite, and I only got a "sorry to see you go" at the end. So kudos to them.</p>
<h2 id="pros-and-cons">
Pros and cons
</h2>
<p>Here is a short list of pros and cons of Pure Talk compared to AT&amp;T, in my opinion:</p>
<p>Good:</p>
<ul>
<li><p>Cheap. Obviously. I am currently paying $22.90 ($12.95 + $9.95) for 500 minutes and 400 MB of data, and I'm switching to 250 minutes next month, which would make it $19.95. Note that as advertised, there are no taxes and hidden fees. I always hated the before-tax price tags in the U.S. Just tell me how much I need to pay!</p></li>
<li><p>Network quality (both talk and LTE) is good. Switching from AT&amp;T, I didn't notice a difference. I don't know if this is true nationwide (I live in the Bay Area), but they say it's true on their FAQ.</p>
<p>By the way, shortly after activating the service, I got a text message pointing me to download a profile to my phone in order to use LTE. It's titled "PureLTE" by "Giesecke and Devrient AB Nordic", and I verified with customer support that it is legit.</p></li>
<li><p>You may change your plan at any time with a few clicks, and only need to make up for the price difference. Note that downgrading doesn't grant you a refund.</p></li>
<li><p>Customer service (U.S. based) is mostly very polite and helpful (I did encounter a guy who sounded very tired with his job though), and wait time is generally very short.</p>
<p>Tip: For customer support, <em>call 611 from a Pure Talk line</em> (instead of the usual ten digit customer service number listed on their website) to avoid being charged.</p></li>
</ul>
<p>Bad:</p>
<ul>
<li><p>There's no visual voicemail, only old-schooled voicemail which you need to dial a number to listen to, in the order they were received; moreover, dialing and listening to voicemail counts toward your minute balance. I hardly missed that. I never grew accustomed to voicemail anyway; now I have an excuse to forget about it completely.</p></li>
<li><p>All incoming phone calls and text messages count towards your minute balance (I don't know about what's most common in the U.S., but as far as I know this is rarely the case in China &#8212; you usually only pay for active usage, although you do need an active service to receive calls and messages). Calling toll free numbers counts, too, so now you'll be even more angry when you're put on hold for an hour.</p></li>
<li><p>For iPhone users, or Android users who otherwise bring in their own phones: since they don't sell you your iPhone, they also don't offer insurance plans. So be extra careful with your phone! Paying $100 for a replacement (from AT&amp;T's insurance program) is no more.</p></li>
</ul>
<p>That's basically all I want to say. Hope this post helps someone who's researching Pure Talk.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Pure Talk also offers an unlimited talk &amp; text plan for $24, excluding data. According to <a href="https://www.puretalkusa.com/mobile-unlimited-plan.php">the "unlimited plus plan" page</a>:</p>
<blockquote>
<p>Compare our Unlimited Plus plans to similar unlimited cell phone plans on the market and you'll see the savings you can receive! While others may pad their higher priced plans with "free" international minutes, we're focused on giving you the best rate for unlimited talk and text, plus data used within the United States.</p>
</blockquote>
<p>I honestly don't know which competitions they are referring to here. If it's AT&amp;T, I'll share an anecdote about international roaming: I went back to China, and got a text message from AT&amp;T saying that I could use data for TWENTY DOLLARS PER MEGABYTE. I would have had to pay $200 to visit The Verge once on 4G.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-26-att-to-pure-talkusa-one-month-later.html#fnref1">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-26-att-to-pure-talkusa-one-month-later.html</guid><pubDate>Mon, 26 Oct 2015 07:00:30 GMT</pubDate></item><item><title>SIP &#8212; For the Greater Good</title><link>http://zmwangx.github.io/blog/2015-10-14-sip-for-the-greater-good.html</link><description><![CDATA[

<p>In recent months I wrote a few thousand words lamenting Finder and <a href="https://en.wikipedia.org/wiki/System_Integrity_Protection">SIP</a> on El Capitan. See <a href="http://zmwangx.github.io/blog/2015-07-30-the-sad-state-of-finder-on-el-capitan.html">The sad state of Finder on El Capitan</a> and <a href="http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html">its follow-up</a>.</p>
<p>For the record, I'm not blaming SIP. It does deal a serious blow to people who in-memory patch stock applications (and there's a good discussion about the creativity aspect on <a href="http://atp.fm/episodes/128">ATP episode 128</a>), but the general public &#8212; at least more than 95% of users &#8212; should not be negatively affected, at least not in the short term. And I can understand why SIP protection comes at this time. Macs used to be safe, but in recent years we are seeing real world exploits increasingly more often. History has shown that technically-challenged users simply can't be entrusted with admin accounts, they are too willing to give their passwords to shady software downloaded from shady corners of the web (and sometimes even renowned corners get hacked). But they are given admin accounts anyway (there has to be someone knowing the admin password), so Apple has to come up with ways to protect them. SIP is a pretty good response.</p>
<p>SIP is also good for new tinkerers. When I first started to tinker with the command line, I wasn't aware of package managers and I wasn't messing inside virtual machines, so I would download packages from official websites, then manually compile and install them to my daily system. Some packages didn't respect the <code>/usr/local/bin</code> (and <code>include</code>, <code>lib</code>, <code>libexec</code>, <code>share</code>, etc.) convention and insisted on <code>/usr/bin</code>; some others used funny locations like a standalone subdirectory of <code>/usr/local</code>; and when things don't work (e.g., can't find libraries when building &#8212; at that time I'm not familiar with <code>CFLAGS=-I</code> yet), I would explictly change <code>PREFIX</code> (probably to <code>/usr</code>) and try again. That way, over a period of a few months, I ended up with a genuinely messed up <code>/usr</code>, with all kinds of stuff everywhere. I probably overwrote quite some binaries shipped with the system. The configuration kind of worked but was pretty fragile. In the end I reinstalled the system, and started to (loosely) follow FHS (<a href="http://www.pathname.com/fhs/">Filesystem Hierarchy Standard</a>) and use package managers (first MacPorts, then Homebrew). Good times. If I were to start tinkering today, I would certainly meet some barriers early on, but I would probably also learn the good practices earlier.</p>
<p>SIP is clearly the future, and I don't blame it. I just hope we don't see a vulnerability in the implementation soon.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-14-sip-for-the-greater-good.html</guid><pubDate>Thu, 15 Oct 2015 00:07:24 GMT</pubDate></item><item><title>Follow-up: The sad state of Finder on El Capitan</title><link>http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html</link><description><![CDATA[

<p><strong>10/14/2015 update</strong> (updated even before I published the article). Just as I was finishing this post, an update to TotalFinder came. <a href="http://totalfinder.binaryage.com/beta-changes">1.7.8</a>. And holy cow, it fixed automatic column resizing! The fix isn't perfect &#8212; there's actually a visible delay before resizing, but I'm happy again. Long live TotalFinder!</p>
<hr/>
<p>As expected, it's hard to get Finder to work the way I want it to on El Capitan. The unexpected part is that even after disabling the Debugging Restrictions part of SIP (<code>csrutil enable --without debug</code>), XtraFinder and TotalFinder<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html#fn1" id="fnref1"><sup>1</sup></a> both can't auto resize columns. Seems that a hole they are both utilizing has been closed. Just like <code>QLEnableTextSelection</code> in <code>com.apple.finder</code>, I guess. Apple gives, Apple takes. XtraFinder has additional problems like folder-on-top not working, window config occasionally forgotten, and the long-standing issue of shitty Chrome-style tab implementation (basically stacking a separate layer on top of each window) that shows a visible white divider, so I'm running TotalFinder right now, not sure about whether it would be abandoned completely next year. Anyway, even after running TotalFinder, it's still that damn old stupid Finder, the columns of which I have to manually resize all the time; just a little bit nicer.</p>
<p>So I went out to look for full Finder replacements. I tried everything listed in the <a href="http://discuss.binaryage.com/t/totalfinder-alternatives/4124">TotalFinder alternatives</a> post on TotalFinder forums. None worked for me. Here's a very brief (batch) review.</p>
<ul>
<li><p><a href="http://likemac.ru/english/">Disk Order</a>, <a href="http://mac.eltima.com/file-manager.html">Commander&#160;</a><a href="http://mac.eltima.com/totalfinder-promo.html">One</a>, <a href="http://www.devstorm-apps.com/dc/">DCommander</a>, and <a href="http://crax.soft4u2.com/">CRAX Commander</a>: No column view. All of them are dual-pane though. What's the advantage of being dual-pane? I can't fathom. Easier to copy/cut and paste? What a joke &#8212; how often do you do that to justify having two panes in your face at all times? Might as well spend the time to do a column view. Column view enables fast navigation and provides a full picture of a directory tree, which is one of the two reasons I use Finder (i.e., a file manager), the other being Quick Look. If I just want to stay in a single directory, and painstakingly navigate in and out, I'll just do everything in the terminal, thank you. By the way, Command One and DCommander are suprisingly similar, both appearance-wise and functionality-wise. Not sure if one rips off the other (looks like DCommander is older). Also, why do most of them call themselves commanders? Another thing that I can't fathom.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html#fn2" id="fnref2"><sup>2</sup></a></p></li>
<li><p><a href="http://www.binarynights.com/forklift/">ForkLift</a>: Again, dual-pane, and doesn't seem to offer a single-pane mode, but you can drag the pane divider all the way to the right to hide the second one (including the divider). It has a column view, but doesn't seem to offer column auto resizing. Also, it doesn't hide items with the <code>hidden</code> flag, which is kind of insane. Even more shockingly, it offers no option to show file extensions! Tell me again that this is a power user tool. (Yeah, I know its myriad power user features, but I need the basic ones, and I don't see them. More discussions about "features" at the end.)</p></li>
<li><p><a href="http://www.cocoatech.com/pathfinder/">Path Finder</a>. It actually kind of works. It offers column auto resizing, hidden in the view options of the column view (accessible via &#8984;J). Even "<code>open ~</code>" could open in Path Finder, if you let it be the default file manager; that was a nice surprise, and I'm not sure about the mechanism (maybe <a href="https://apple.stackexchange.com/questions/73529/how-to-change-the-default-file-manager-for-osx">this</a>? Doesn't sound right though). However, it has a horrible default appearance, and even after substantial customizations, it still looks kind of crappy. Also, the auto resizing implementation is incomplete, in that it doesn't offer min and max column size settings, so when auto resizing is enabled, many columns look awfully narrow. I'm also suspicious about its tech support. When I was investigating some issues about it on Google, I found some relevant tickets on its <a href="http://support.cocoatech.com/">support site</a>, but <em>none</em> of the tickets have any replies. I didn't bother to look around, but that was definitely a bad impression.</p>
<p>By the way, I mentioned concerns about Path Finder's pricing in the <a href="http://zmwangx.github.io/blog/2015-07-30-the-sad-state-of-finder-on-el-capitan.html">sad state</a> post. At $40 it's definitely not cheap, but judging from the <a href="http://support.cocoatech.com/kb/installation-and-compatibility/path-finder-version-history">release history</a>, it's more like pay-to-upgrade every other year, rather than every year.</p>
<p>Conclusion: not impressed.</p></li>
</ul>
<p>Finally, a few words about "pro features". Many of these file managers offer a huge bundle of pro features, but quite of a few of them are completely useless. Useless features include builtin text editor, hex editor, terminal, archiver and unarchiver, blah blah blah. Why would anyone use those watered-down builtins? I use the right tool, the dedicated tool, for the right job. (To give one example, Commander One includes a command line that you can type commands to execute &#8212; without command or filename completion, naturally; and it also ships with a builtin terminal accessible via &#8963;O. Apart from horrendous typography, the builtin terminal is also barely better than a dumb term, incapable of handling my prompt theme. Meanwhile, iTerm2 is accessible via a system-wide shortcut &#8997;Space to me &#8212; extremely convenient.) Support for other filesystems, including remote filesystems and in-place archive browsing, could be welcome though, although I seldom need them.</p>
<hr/>
<p>P.S. Here are the version numbers, at the time of writing, of the mentioned software packages (apparently, things might change in later versions):</p>
<ul>
<li>TotalFinder 1.7.6 (beta);</li>
<li>XtraFinder 0.25.5;</li>
<li>Disk Order 3.2.5;</li>
<li>Commander One 1.1.1346;</li>
<li>DCommander 2.7.2;</li>
<li>CRAX Commander 1.10.4 (demo);</li>
<li>ForkLift 2.6.6;</li>
<li>Path Finder 7.2.</li>
</ul>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>TotalFinder 1.7.8+ now supports column auto resizing on El Cap. See update at the top.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>If you Google <a href="https://www.google.com/search?q=file+manager+commander">"file manager commander"</a>, you'll find a hell lot of "commanders". Reminds me of C&amp;C... Oh well.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html#fnref2">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-14-follow-up-the-sad-state-of-finder-on-el-capitan.html</guid><pubDate>Wed, 14 Oct 2015 19:30:32 GMT</pubDate></item><item><title>The importance of dated, detailed release notes</title><link>http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html</link><description><![CDATA[

<p>I can't stress how much I value release notes, especially for closed source, commercial software. None of us want to invest on a piece of abandonware (unless it is ageless, which is quite unlikely for anything with a GUI), or a piece of software that is not completely abandoned, but takes a full year to adapt to the latest OS, campatibility-wise or UI-wise; and release notes, especially with dates, serve as almost the single metric for gauging developer commitment. In fact, whenever I try to learn about a piece of software that I heard about, one of the first things I do, usually after browsing through features and screenshots and before I even download the software to try out, is to look for its release notes and skim through it if available, and the outcome largely determines whether I'll even bother to download the installer.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html#fn1" id="fnref1"><sup>1</sup></a> A prominent, dedicated page with dated, detailed release notes immediately leaves a good impression on me.</p>
<p>Unfortunately, many developers or publishers don't value release notes as much as I do. Several problems, in ascending order of seriousness:</p>
<ul>
<li><p>Most release notes are not linked to from the home page or at least the download page, which kind of makes sense when the audience is generally non-technical, but there's little excuse when the software's targeted audience are pro-level or power users. This is not a big problem now because Google is very good at turning up release notes as long as they exist.</p></li>
<li><p>Quite some release notes are not dated, which I can't understand &#8212; it's so easy to date each entry, and it adds so much context, especially for gauging commitment (I guess developers who are less commited might not want to insert dates precisely for this reason).</p></li>
<li><p>For some software, releases notes are downright nonexistent, at least not on the web. Interestingly, occasionally they are available from an in-app menu or distributed document; the publishers just don't bother to put it on a web page. Not surprisingly, I might as well not bother to download this kind of software.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html#fn2" id="fnref2"><sup>2</sup></a></p></li>
</ul>
<p>If I were ever to publish closed source software, I'll definitely have dated, detailed release notes, linked to from the home page.</p>
<hr/>
<p>P.S. Speaking of release notes, it's hard not to complain about MAS, as if there are not enough complaints about this horrible platform. You can only view the most recent release with its release notes (and some publishers stack "bug fixes" notes of minor/patch releases on top of the real notes of the last major release, making it ever more confusing), whereas in the iOS App Store you have the "Version History" page that shows you a dated list of releases with release notes &#8212; what I would expect from everywhere. Basically, Apple has all this data and they can show it to you in a satisfactory way it they want to, but they blew it by not bothering to implement it. Note that I'm much more likely to care about the release notes of an OS X application than an iOS app, and I daresay most power users will agree with me.</p>
<p>Of course there are much more serious problems with MAS like the lack of trials, so the release notes problem is nothing but an insult over injury. In short, MAS is not a good distribution channel; it's only a lazy one, a compromise for small publishers.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Nowadays, with homebrew-cask, I'm much more likely to give things a spin, but still, I take an especially defensive stance against anything that doesn't have release notes.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Yes, I won't deny that downloaded some of them nevertheless &#8212; that's how I found out.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html#fnref2">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-12-the-importance-of-dated-detailed-release-notes.html</guid><pubDate>Mon, 12 Oct 2015 21:29:42 GMT</pubDate></item><item><title>Printing long, 80-character-per-line plain text document in two columns</title><link>http://zmwangx.github.io/blog/2015-10-10-printing-long-80-character-per-line-plain-text-document-in-two-columns.html</link><description><![CDATA[

<p><strong>TL; DR</strong>. Jump to <a href="http://zmwangx.github.io/blog/2015-10-10-printing-long-80-character-per-line-plain-text-document-in-two-columns.html#code">code</a>.</p>
<hr/>
<p>Printing is hard. Everyone who has ever tried to set up a printer (especially a multifunction unit) will probably agree with me. There are also a million ways to be sabotaged by your printer, e.g., connection failure (over Wi-Fi), toner running low, manual duplex eating two sheets at once when printing the second side. (Do you believe I encountered all three tonight?) Anyway, let's just assume that you have a perfectly connected, perfectly functional printer, and talk about something even harder.</p>
<p>We nerds read 80-character-per-line (or 72, but it's safer to assume longer) plain text documents all the time, or at least occasionally if we exclude source code. A plain text document is extremely versatile; it looks awesome in a text editor or in a browser window &#8212; with monospace typeface of your choice and infinite scrolling or arbitrary pagination. However, the problem is, sometimes we want to put things into print for easier reference, and we do <em>not</em> have infinite scrolling or arbitrary pagination in print. We want to divide things up into pieces that fit nicely onto 8.5'' by 11'' sheets, without ruining the original formatting of the plain text document. Therefore, some program has to decide the page layout and translate the plain text document into something a printer understands, e.g., PostScript. But since plain text is so versatile, there are a million ways to lay it out on paper.</p>
<p>You would assume that this is a solved problem, since the digital publishing industry has been around for 40 years; and you would assume that this should be easy on a Mac because it is a great platform for "creative professionals". And indeed it's not hard if you just want to print one column of 80 characters. You can even do that in TextEdit, where you pick a plain text font and font size so that lines don't wrap, and there you go. If you are using a more capable GUI text editor like TextWrangler (I use Emacs all the time but I don't know about printing from Emacs), you are given more customization options like header and line numbers. However, 80 character lines look awful on a 8.5'' wide page. Characters are HUGE (to me anyway). Note that monospaced fonts usually look better when they are smaller (I'm a <a href="http://zmwangx.github.io/blog/2015-08-31-after-all-these-years-10pt-non-anti-aliased-monaco-is-still-the-best.html">10pt bitmap Monaco fan</a>), and do keep in mind that we are usually farther away from a computer screen than a piece of paper held in hand, so even "10pt" could look pretty big in print. Moreover, you most likely get the outlined version of your font in print rather than the bitmap version, which depending on your font of choice might not be a good thing, and the difference is amplified when characters are big. And above all, you waste a lot of paper this way, and create stapling problems for yourself when the document is long. In short, I don't find it a good solution.</p>
<p>It would be much nicer if we could print in two columns. The characters will be pretty small so it's probably not very good for older people (or they could try two columns in landscape), but I'm still pretty young and have fairly good eyesight, so I like this idea. But turns out this is nontrivial with existing GUI programs, at least the ones that I know of. You could emulate the two-column layout by having four pages on one sheet, but it's really awkward because you get a page divider in each single column (waste of space), and page numbering would be all messed up. Other than that there's little you could do. I guess there's just not enough market for this particular need. Luckily we have a large selection of modular command line utilities that we can stitch together for great results. I'll cut the bullshit here and just show you the <span id="code">code</span> (for US letter):</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="kw">curl</span> https://www.gnu.org/software/bash/manual/bash.txt \
    <span class="kw">|</span> <span class="kw">pr</span> --columns=2 --width=168 --length=120 --form-feed --date-format=%Y-%m-%d --header=<span class="st">"Bash Reference Manual"</span> - \
    <span class="kw">|</span> <span class="kw">enscript</span> --media=Letter --header= --font=Courier5.5 --margins=18:18:0:18 --output - \
    <span class="kw">|</span> <span class="kw">ps2pdf</span> - bash-print.pdf</code></pre></div>
<p>Here, as an example, I'm printing the ASCII text version of the Bash Reference Manual. <code>pr</code> ships with <code>coreutils</code> (OS X also ships with the BSD version of <code>pr</code>, but geez, I'm a <code>coreutils</code> fan), so if you just <code>brew install coreutils</code> then you should use <code>gpr</code> instead. <code>enscript</code> here is <a href="https://www.gnu.org/software/enscript/">GNU Enscript</a>, which could be installed with <code>brew install enscript</code> (credit to <a href="https://askubuntu.com/questions/27097/">Ask Ubuntu</a> for pointing me to this utility). <code>ps2pdf</code> ships with GhostScript, so you could do <code>brew install gs</code>, but you should already have it if you've got the MacTeX or TeXLive distribution installed. The options I'm using should be pretty self-explanatory and tweakable, but in case you don't understand something, just RTFM (that way you could also find more options). Anyway, a page of <code>bash-print.pdf</code> from the above looks like this (this one happen to be a 72-char-per-line document, whereas my numbers are tailored for 80; the image is at 300 ppi):</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151010-bash-print-sample-page.png" target="_blank"><img alt="Sample page from bash-print.pdf generated above. I drew a black, one-pixel border so you could tell the page from the background." src="http://zmwangx.github.io/img/20151010-bash-print-sample-page.png"/></a>
<p class="caption">Sample page from <code>bash-print.pdf</code> generated above. I drew a black, one-pixel border so you could tell the page from the background.</p>
</div>
<p>P.S. Preview.app on El Capitan just caught me by surprise. If memory serves, exporting PDF to PNG in Preview.app used to produce only one image for the current page, but now apparently you get a single, gigantic <a href="https://en.wikipedia.org/wiki/APNG">APNG</a> with each page in a frame. It's not very useful at 10 fps, though. Also, exporting to JPEG doesn't give you an MJPEG.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-10-printing-long-80-character-per-line-plain-text-document-in-two-columns.html</guid><pubDate>Sun, 11 Oct 2015 05:35:15 GMT</pubDate></item><item><title>We need an OS X security white paper</title><link>http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html</link><description><![CDATA[

<p>Apple has been offering an excellent <a href="https://www.apple.com/privacy/docs/iOS_Security_Guide.pdf">iOS Security White Paper</a> since at least 2012, and it's very informative. I highly encourage everyone to read it. It even explains some annoyances of iOS; for instance, <a href="http://www.relay.fm/upgrade/56">this week's Upgrade episode</a> discussed, <a href="https://daringfireball.net/linked/2015/10/01/upgrade-56">in Gruber's words</a>, "the lousy, painstaking, and at times downright confusing experience of migrating to a new iOS device", and once you read the white paper you'll realize that many things just can't be migrated due to iOS's hardware security model &#8212; basically, certain classes of data are encrypted with crypto keys baked into the silicon (see the section "Hardware security features"). I'm not saying the migration experience should be this painful (I would love to see it fixed or improved), but at least there's an explanation.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html#fn1" id="fnref1"><sup>1</sup></a></p>
<p>But I digress. This post is about OS X. I've been hunting for an OS X equivalent for a while now, but I don't think it exists. And recently people are talking about Apple's <a href="https://www.apple.com/privacy/">updated Privacy website</a><a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html#fn2" id="fnref2"><sup>2</sup></a>, so I went there with a glimmer of hope. End result: no luck. In fact, Apple links to its iOS Security White Paper at the bottom of "<a href="https://www.apple.com/privacy/approach-to-privacy">Our Approach to Privacy</a>":</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151003-ios-security-white-paper-but-no-osx.png" target="_blank"><img alt="iOS Security White Paper linked, but no OS X." src="http://zmwangx.github.io/img/20151003-ios-security-white-paper-but-no-osx.png"/></a>
<p class="caption">iOS Security White Paper linked, but no OS X.</p>
</div>
<p>But there's little to no mention of OS X (the words "Mac" and "OS X" each appears only once on the page). This is not surprising; OS X as the second class citizen is nothing new, and iPhones and Apple Watches are arguably more intimate, and hence more private devices &#8212; at least for most people. It is somewhat disappointing though.</p>
<p>I forgot to mention why I would like to see an OS X security white paper. The reason is simple: a lot of security features are under-explained. For instance, I might want to learn more about FileVault: why am I given the choice of decrypting my drive with iCloud &#8212; I believe it's not the case on iOS? How does iCloud handle my disk encryption key, if I allow it access (I don't)? Or I might want to learn more about System Integrity Protection: does it auto revert (or repair, in their eyes) some permissions (e.g., that of <code>/usr/local</code>), as I heard people talking about? Or maybe more about code signing and the inner workings of Gatekeeper: there's <a href="http://arstechnica.com/security/2015/09/drop-dead-simple-exploit-completely-bypasses-macs-malware-gatekeeper/">recent news</a> of Gatekeeper workarounds. I guess some of these stuff can be found in Apple's support documents or developer documentation if you look hard enough, but it would be nice if the major security features and their implementations are presented coherently in a single document. Maybe the OS X security model is too complex and diverse to fit into a single document? I don't know. Anyway, I'll keep waiting.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Loss of certain classes of protected data (due to hardward crypto keys) during migration should in principle only apply to migration by "restoration". What about providing a direct phone-to-phone migration, where data could be decrypted and transferred on the fly? But that would at least require a lightning male to lightning male cable (or you would have to entrust your most sensitive data, which shouldn't even leave the phone under normal conditions, to your Wi-Fi, something Apple probably wouldn't do), and having to use a different, and actually unheard-of cable isn't very realistic, so it won't be happening any time soon.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>I haven't read through everything, but the idea of a <a href="https://www.apple.com/privacy/privacy-policy/">non-law-practicing-human readable privacy policy</a> is great.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html#fnref2">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-03-we-need-an-os-x-security-white-paper.html</guid><pubDate>Sat, 03 Oct 2015 10:34:24 GMT</pubDate></item><item><title>Auto hidden menu bar &amp; dock + maximized window is the new full screen mode</title><link>http://zmwangx.github.io/blog/2015-10-01-auto-hidden-menu-bar-dock-maximized-window-is-the-new-full-screen-mode.html</link><description><![CDATA[

<p>One nice feature of OS X El Capitan is that the menu bar can be auto hidden. Combined an auto hidden dock, we can now emulate the full screen experience with a maximized window while still enjoying overlayed windows, e.g., transparent terminal windows or "Picture in Picture" style small floating player. To see how closely a full screen experience is emulated this way, see the side-by-side screenshots below.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151001-maximized-window-vs-full-screen.png" target="_blank"><img alt="Maximized and full screen windows of Google Chrome side by side. Can you tell any difference apart from the color of the title bar and a bit of black bottom margin on the left?" src="http://zmwangx.github.io/img/20151001-maximized-window-vs-full-screen.png"/></a>
<p class="caption">Maximized and full screen windows of Google Chrome side by side. Can you tell any difference apart from the color of the title bar and a bit of black bottom margin on the left?</p>
</div>
<p>I've always liked maximized windows much better than full screen windows. (Maybe this is part of the legacy from my early Windows days? Anyway, to Microsoft's credit, Windows <em>is</em> better in certain aspects, e.g., File Explorer. You see, I'm still fighting Finder to this day. Window maximization is also something that Windows does better, although I do like OS X's universal menu bar and hate the Windows menus that could appear in all kinds of surprising places.) There are legit reasons to perfer maximized windows over full screen. One obvious advantage is persistent window stacking, which has already been mentioned. Moreover, sometimes I need to temporarily bring up another app for a quick task, which is to say I need something like iOS 9's Slide Over &#8212; but on the desktop slide-over already comes for free with window overlay. In full screen mode, however, the second app will be opened in another desktop space with lavish animation of switching, and when I'm done I need to swipe back to the original space, again with lavish animation, instead of just &#8984;H to hide. Do it several times in quick succession and it's a pretty nauseous experience (of course I'm exaggerating, but it's certainly neither comfortable nor productive).</p>
<p>In short, maximized windows have always been great, and now they are getting even better.</p>
<p>P.S. I personally don't have many informational moving parts in the menu bar. There's date time down to seconds, but I have an Apple Watch on my wrist, and I don't mind raising my wrist for a few seconds when I need the time. There's a battery icon which I certainly won't look at constantly &#8212; my MBP is plugged in most of the time. There's a Dropbox icon that would animate when it is syncing, which I don't care. Other than that, all icons are still. Therefore, I can totally do away with the menu bar until I really need it.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-01-auto-hidden-menu-bar-dock-maximized-window-is-the-new-full-screen-mode.html</guid><pubDate>Thu, 01 Oct 2015 22:48:59 GMT</pubDate></item><item><title>Upgrading to El Capitan</title><link>http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html</link><description><![CDATA[

<p>I upgraded to El Capitan last night, and the experience is pretty painless. To be accurate, I'm not really upgrading in place &#8212; I always perform a clean install for each major OS upgrade to avoid subtle breakage later on. Therefore, what I did instead was to <code>rsync</code> out all my valuable data and state information<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fn1" id="fnref1"><sup>1</sup></a> to an external drive, wipe the internal drive clean, install new OS from scratch, then <code>rsync</code> everything back in. <code>rsync</code> is really good at this stuff (I affectionately alias <code>rsync -avP</code> to <code>r</code> during transfers in and out), and it is simply amazing at dropping the right stuff at the right place, including data deep down <code>~/Library/Containers</code>, without interfering with the existing structures<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fn2" id="fnref2"><sup>2</sup></a>. With data and state info ready, reinstalling programs is also easy, thanks to my recently finished <a href="http://zmwangx.github.io/blog/2015-08-25-automated-os-x-provisioning.html">automated provisioning system</a>. It was the first time I used it outside a VM to provision an OS from almost scratch, and I'm really happy with it.</p>
<p>Thus far, most of my programs and applications seem to work just fine on El Capitan. I needed to <code>brew reinstall pyenv --HEAD</code> because an OpenSSL fix for El Capitan hasn't made into a release yet. Some of XtraFinder's features<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fn3" id="fnref3"><sup>3</sup></a>, including my most needed auto resizing columns, don't seem to work on El Capitan yet, and I'll have to contact the developer soon. The only distratrous incompatibility I've seen lies with Mathematica 9; <code>codesign -vvvv Mathematica.app</code> on the v9.0.1 app bundle says <code>resource envelope is obsolete (version 1 signature)</code>, and OS X downright refused to open the app, offering me no option other than trashing the app, even when I temporarily set Gatekeeper to "Any". Anyway, I quickly paid to upgrade to v10.2.0 (cost of free OS upgrade, geez), and it ran happily afterwards. Those were basically all I had to deal with. I haven't set up my mail accounts<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fn4" id="fnref4"><sup>4</sup></a> and printer yet, but hopefully they will work, and just hopefully Apple Mail finally got it right this time&#8482; and won't ask me to reauthenticate with Gmail all the time.</p>
<p>Overall it was pretty good experience. Nevertheless, I was caught by surprise at least twice, due to subtle user-facing changes in the OS. Actually these surprises motivated me to write this post.</p>
<p>First, <u>the OS seems to default to using the iCloud password (i.e., the Apple ID password) as the local account password now.</u> Maybe I missed a checkbox during setup (unlikely), and maybe it was nothing new (I don't think so), but I only realized this when I needed to <code>sudo</code> on the new OS for the first time. I typed my usual local password thrice, no luck. Did I accidentally gave my 1Password master password? Thrice, no luck. Did I accidentally used Vagrant's default password (i.e., <code>vagrant</code>, however unlikely)? This one is short enough and I didn't need to type it thrice to realize it was wrong &#8212; I knew that all along anyway. Did I... No, I couldn't have used anything else (literally ten minutes ago) without remembering it. I was completely horror-struck at that point, but speaking of remembering, I didn't even remember giving a password hint! So could it be... Yes, I typed in my 32 character long iCloud password, and this time it was right. I quickly realized after the fact that this setting could be toggled in the standard System Preferences -&gt; Users &amp; Groups -&gt; Change Password... (see screenshot below), so if you are in this situation, don't panic. I don't like this move though. Hopefully Apple won't degrade to Microsoft's level at some future point, where you either sign in with a Microsoft account (and have to type your Microsoft password to log in) or miss out on cloud features with a local account.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151001-osx-el-capitan-icloud-password-to-log-in.png" target="_blank"><img alt="Screenshot taken after I've changed to a local password. After initial setup, it would be the reverse." src="http://zmwangx.github.io/img/20151001-osx-el-capitan-icloud-password-to-log-in.png"/></a>
<p class="caption">Screenshot taken after I've changed to a local password. After initial setup, it would be the reverse.</p>
</div>
<p>Secondly, <u>three finger drag, a multitouch gesture that I use all the time to move windows on screen, is now mysteriously gone from System Preferences -&gt; Trackpad</u> (it used to be in "Touch &amp; Click"):</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151001-osx-el-capitan-wheres-my-three-finger-drag.png" target="_blank"><img alt="Where's my beloved three finger drag? By the way, since it is shown in this screenshot, I'll officially declare here that I'm a tap-to-click wizard." src="http://zmwangx.github.io/img/20151001-osx-el-capitan-wheres-my-three-finger-drag.png"/></a>
<p class="caption">Where's my beloved three finger drag? By the way, since it is shown in this screenshot, I'll officially declare here that I'm a tap-to-click wizard.</p>
</div>
<p>Maybe Apple found it somewhat confusing with the three finger tap/click, which is clearly a different gesture. I found the solution in an Apple Support document, <a href="https://support.apple.com/en-us/HT204609">Turn on "three finger drag" for your Force Touch trackpad</a>, while my trackpad is clearly not Force Touch (the document was written for Yosemite, so clearly the reorganized settings started out on the MacBook One and newer Retina MacBook Pros in Yosemite and spreaded to all Macs in El Capitan). Anyway, the gesture could be turned on in System Preferences -&gt; Accessibility -&gt; Mouse &amp; Trackpad Options... -&gt; Enable dragging. That was godawful, no one could possibly find it, but hopefully it's hidden there because of the confusion rather than Apple intentionally phasing it out.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20151001-osx-el-capitan-three-finger-drag-there-it-is.png" target="_blank"><img alt="Oh, there it is!" src="http://zmwangx.github.io/img/20151001-osx-el-capitan-three-finger-drag-there-it-is.png"/></a>
<p class="caption">Oh, there it is!</p>
</div>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>State information includes <code>~/.config</code> and <code>~/.local</code>, Google Chrome and Firefox profiles, Messages archive, Mathematica customizations, Unclutter notes, VMware Fusion inventory, various important plists, and so on and so forth.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Unless you are stupid enough to specify the <code>--delete</code> flag when you transfer in.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fnref2">&#8617;&#65038;</a></p></li>
<li id="fn3"><p>As mentioned in <a href="http://zmwangx.github.io/blog/2015-07-30-the-sad-state-of-finder-on-el-capitan.html">The sad state of Finder on El Capitan</a>, I've disabled SIP and am running XtraFinder. I simply can't live with the stock Finder, that is, without code injection.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fnref3">&#8617;&#65038;</a></p></li>
<li id="fn4"><p>Setting up mail accounts is the most painful thing in the world, especially if you have a dozen of them for different tasks.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html#fnref4">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-10-01-upgrading-to-el-capitan.html</guid><pubDate>Thu, 01 Oct 2015 18:46:44 GMT</pubDate></item><item><title>Removing Google Analytics from this blog</title><link>http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html</link><description><![CDATA[

<p>There was a lengthy discussion about Peace and ad-blocking in <a href="http://atp.fm/episodes/136">Accidental Tech Podcast Episode 136</a>. There were many lessons to learn from the story; as a side effect, it also made me reconsider Google Analytics on this blog.</p>
<p>I've been a user of ad-blocking for years and have little to no moral burden.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html#fn1" id="fnref1"><sup>1</sup></a><a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html#fn2" id="fnref2"><sup>2</sup></a> I do hate being tracked online, even by Google (to whom I entrust so much of my personal information), although it's certainly better (I believe) than the host of shadier ad networks out there. Given this, why should I force something even I hate down my visitors' throats? Google Analytics is nice at telling me how many page views I got and where they came from, and I don't earn any money from it so I shouldn't feel guilty, but (1) it does install a tracker, and (2) I care very little about traffic anyway.</p>
<p>At this point the decision is pretty clear. I'm simply removing Google Analytics from this blog. This makes the blog entirely cookie-free and JS-free (except for the very occasional JS embed).</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>I do try to support websites I frequent, e.g., through <a href="https://arstechnica.com/subscriptions/">Ars Premier</a>.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Although it's easy to be a user of ad-blocking, I fully understand the moral (or even legal) burden of being the developer of an ad-blocker, let alone being the "face" of the ad-blocking industry; therefore, I understand and respect Marco's decision of pulling Peace.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html#fnref2">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-09-25-removing-google-analytics-from-this-blog.html</guid><pubDate>Fri, 25 Sep 2015 19:30:25 GMT</pubDate></item><item><title>Apple Watch: Digital Crown tightness issue</title><link>http://zmwangx.github.io/blog/2015-09-24-apple-watch-digital-crown-tightness-issue.html</link><description><![CDATA[

<p>Quick tip: if the Digital Crown on your Apple Watch <em>all of a sudden</em><a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-24-apple-watch-digital-crown-tightness-issue.html#fn1" id="fnref1"><sup>1</sup></a> feels too tight and doesn't turn smoothly, probably it was somehow over-turned (and probably because you played with watchOS 2 Time Travel, as I did). I don't know how that happened because it's clearly not supposed to happen, but turning it in the easy-to-turn direction for a few rounds fixed the tightness issue for me.</p>
<p>There's also an <a href="https://support.apple.com/en-us/HT204639">Apple Support document</a> on troubleshooting and cleaning the Digital Crown, if the above doesn't help.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Especially after upgrading to watchOS 2. Why in the hell could upgrading the software screw up the hardware? You'll see a possible cause if you read on.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-24-apple-watch-digital-crown-tightness-issue.html#fnref1">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-09-24-apple-watch-digital-crown-tightness-issue.html</guid><pubDate>Thu, 24 Sep 2015 17:55:38 GMT</pubDate></item><item><title>Zsh 5.1 and bracketed paste</title><link>http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html</link><description><![CDATA[

<p><strong>TL;DR.</strong> Jump to <a href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#code">code</a>.</p>
<hr/>
<p>In short, Zsh 5.1 introduced bracketed paste mode<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fn1" id="fnref1"><sup>1</sup></a> and turned it on by default (as it seems to me<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fn2" id="fnref2"><sup>2</sup></a>). It is nice in certain ways &#8212; I appreciate the change, yet I was bitten nevertheless. In at least two ways:</p>
<ol style="list-style-type: decimal">
<li><p>Most annoyingly, <code>url-quote-magic</code> doesn't work anymore when pasting URLs, so for example if I paste</p>
<pre><code>https://www.google.com/search?q=zsh</code></pre>
<p>without typing in a single or double quote first, the <code>?</code> and <code>=</code> won't be backslash-quoted by default, which causes an error when passed unnoticed (out of habit).</p></li>
<li><p>The Emacs shell<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fn3" id="fnref3"><sup>3</sup></a> is littered with <code>^[[?2004h</code> and <code>^[[?2004l</code> around every prompt.</p></li>
</ol>
<p>The solution? Zsh now also ships with <a href="https://github.com/zsh-users/zsh/blob/master/Functions/Zle/bracketed-paste-magic"><code>bracketed-paste-magic</code></a> that resolves exactly breakage #1 (and a bit more); to quote comments from the linked source file:</p>
<blockquote>
<p>Starting with zsh-5.1, ZLE began to recognize the "bracketed paste" capability of terminal emulators, that is, the sequences <code>$'\e[200~'</code> to start a paste and <code>$'\e[201~'</code> to indicate the end of the pasted text. Pastes are handled by the bracketed-paste widget and insert literally into the editor buffer rather than being interpreted as keystrokes.</p>
<p>This disables some common usages where the self-insert widget has been replaced in order to accomplish some extra processing. An example is the contributed url-quote-magic widget. The bracketed-paste-magic widget replaces bracketed-paste with a wrapper that re-enables these self-insert actions, and other actions as selected by the zstyles described below.</p>
</blockquote>
<p>And to resolve breakage #2, just disable bracketed paste altogether for dumb terms.</p>
<p id="code">
Putting it together:
</p>
<div class="sourceCode"><pre class="sourceCode zsh"><code class="sourceCode zsh"><span class="co"># turn off ZLE bracketed paste in dumb term</span>
<span class="co"># otherwise turn on ZLE bracketed-paste-magic</span>
<span class="kw">if [[</span> <span class="ot">$TERM</span> <span class="ot">==</span> dumb<span class="kw"> ]]</span>; <span class="kw">then</span>
    <span class="kw">unset</span> zle_bracketed_paste
<span class="kw">else</span>
    <span class="kw">autoload</span> -Uz bracketed-paste-magic
    <span class="kw">zle</span> -N bracketed-paste bracketed-paste-magic
<span class="kw">fi</span></code></pre></div>
<hr/>
<p><span id="update"><strong>09/22/2015 update.</strong></span> I only read <code>NEWS</code> and not <code>README</code>, so I missed out on a very clear announcement of the <a href="https://github.com/zsh-users/zsh/blob/68405f31a043bdd5bf338eb06688ed3e1f740937/README#L38-L45">bracketed paste incompatibitilies (between 5.0.8 and 5.1)</a>:</p>
<blockquote>
<p>The default behaviour when text is pasted into an X Windows terminal has changed significantly (unless you are using a very old terminal emulator that doesn't support this mode). Now, the new "bracketed paste mode" treats all the pasted text as literal characters. This means, in particular, that a newline is simply inserted as a visible newline; you need to hit Return on the keyboard to execute the pasted text in one go. See the description of <code>zle_bracketed_paste</code> in the <code>zshparams</code> manual for more. "<code>unset zle_bracketed_paste</code>" restores the previous behaviour.</p>
</blockquote>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Bracketed paste mode is a safeguard against inadvertent interpretation of pasted text, e.g., newline being treated at <code>accept-line</code> in Zsh. You may read more about it <a href="https://cirw.in/blog/bracketed-paste">in this blog post</a>, which is somewhat outdated yet still informational.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Indeed it is. See <a href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#update">update</a> with more accurate info from official source.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fnref2">&#8617;&#65038;</a></p></li>
<li id="fn3"><p>I seldom use this dumb (literally) thing, but when I do I expect it to work ungarbled, naturally.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html#fnref3">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-09-21-zsh-51-and-bracketed-paste.html</guid><pubDate>Mon, 21 Sep 2015 21:40:36 GMT</pubDate></item><item><title>After all these years, 10pt non-anti-aliased Monaco is still the best</title><link>http://zmwangx.github.io/blog/2015-08-31-after-all-these-years-10pt-non-anti-aliased-monaco-is-still-the-best.html</link><description><![CDATA[

<p>Ars Technica <a href="http://arstechnica.com/information-technology/2015/08/open-source-typeface-hack-brings-design-to-source-code/">just ran a piece</a> on the open source programming font <a href="https://github.com/chrissimpkins/Hack">Hack</a>. Now I don't really know why this is news-worthy (open source programming fonts aren't a new thing), but I thought I'd give it a try.</p>
<p>The result is unsurprising. I've loved my 10pt non-anti-aliased Monaco for years, beginning with the Pro profile of Terminal.app. In fact, I initially refused to use iTerm2 precisely because I can't reproduce my beloved typeface in it, until I found out the non anti-aliasing trick. This time again, Hack simply can't compete with my favorite font; see the screenshots below. Among other things, it is way too thick for my liking &#8212; the same problem that haunts a whole range of programming fonts. Note that Hack is <a href="https://github.com/chrissimpkins/Hack#about">supposed to</a> look good at 8px&#8211;12px according to its README, but I tested it at 9pt&#8211;12pt in iTerm2 (I know, pt is supposed to be larger than px, but I seriously doubt that anyone would want 8px or 6pt as their daily font size &#8212; and for that matter iTerm2 doesn't even allow me to go below 9pt, a pretty reasonable restriction, I'd say).</p>
<p>By the way, it is worth pointing out that the very same Monaco looks horrible at 9pt or 11pt, anti-aliased or not (same goes for 10pt anti-aliased). 10pt non-anti-aliased Monaco is simply a miracle.</p>
<p><strong>09/01/2015 update:</strong> Looks like I was quite confused about pt and px, and they are to be used interchangeably in the current context. I suggest that anyone interested in this subject also read John Gruber's two very informative pieces from 2003, <a href="http://daringfireball.net/2003/03/antialiasing.html"><em>Anti-Aliasing</em></a> and <a href="https://daringfireball.net/2003/03/anti-anti-aliasing"><em>Anti-Anti-Aliasing</em></a>.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150831-terminal-app-pro-profile.png" target="_blank"><img alt="Pro profile in Apple's Terminal.app, with 10pt non-anti-aliased Monaco. That says something about the font's quality, especially on a dark background." src="http://zmwangx.github.io/img/20150831-terminal-app-pro-profile.png"/></a>
<p class="caption">Pro profile in Apple's Terminal.app, with 10pt non-anti-aliased Monaco. That says something about the font's quality, especially on a dark background.</p>
</div>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150831-monaco-10pt-non-antialiased.png" target="_blank"><img alt="10pt non-anti-aliased Monaco is life." src="http://zmwangx.github.io/img/20150831-monaco-10pt-non-antialiased.png"/></a>
<p class="caption">10pt non-anti-aliased Monaco is life.</p>
</div>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150831-hack-8,9,10,11pt-antialiased-combined.png" target="_blank"><img alt="Hack, anti-aliased, at 9pt, 10pt, 11pt and 12pt, respectively. Click to enlarge." src="http://zmwangx.github.io/img/20150831-hack-8,9,10,11pt-antialiased-combined.png"/></a>
<p class="caption">Hack, anti-aliased, at 9pt, 10pt, 11pt and 12pt, respectively. Click to enlarge.</p>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-31-after-all-these-years-10pt-non-anti-aliased-monaco-is-still-the-best.html</guid><pubDate>Sun, 30 Aug 2015 22:31:03 GMT</pubDate></item><item><title>Automated OS X provisioning</title><link>http://zmwangx.github.io/blog/2015-08-25-automated-os-x-provisioning.html</link><description><![CDATA[

<p>After quite a bit of work, I finally have a decent OS X provisioning system, capable of provisioning a blank OS X install (with Xcode and CLT) for development and everyday life.</p>
<p>Here it is: <a href="https://github.com/zmwangx/dotfiles/blob/master/provision"><code>zmwangx/dotfiles/provision</code></a>. In case the path changes in the future and invalidates the aforementioned URL, <a href="https://github.com/zmwangx/dotfiles/blob/d8e20b731583d69b380d422c8788f61cd4a4e211/provision">here</a> is the archived provisioning script at the current master. Of course the provisioning system is not a single script; it reads and executes modules from a <a href="https://github.com/zmwangx/dotfiles/tree/master/provision.d"><code>provision.d</code></a> directory, which in turn links into other specialized parts of the system.</p>
<p>Selling points:</p>
<ul>
<li><p>Highly modular due to the <code>provision.d</code> structure. New provisioning scripts for specialized tools can be added at any time without complicating the rest of the system.</p></li>
<li><p>Graceful failure and easy error recovery. For most failures, running the provision once more fixes the issues. This is especially helpful when GitHub get DDoS'ed and loads of downloads fail, e.g., <a href="https://web.archive.org/web/20150825150044/https://status.github.com/messages">last night</a>, when I was sleeping with the provisioning system hard at work.</p></li>
<li><p>Very nice, colored console messages. Of course you'd expect that when half of the code is devoted to messaging...</p></li>
</ul>
<p>Thus far tested on OS X 10.10 and 10.11. Works pretty well. Of course OS X provisioning (with so many impossible-to-automate tasks) is still a hell lot harder than Linux provisioning, but hopefully this system will safe me a considerable amount of time and trouble during my at-least-twice-a-year clean OS installation and beta testing in VMs.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150825-osx-provisioning-system.png" target="_blank"><img alt="provision at work. Provisioning a blank machine is probably the only time I need Terminal.app." src="http://zmwangx.github.io/img/20150825-osx-provisioning-system.png"/></a>
<p class="caption"><code>provision</code> at work. Provisioning a blank machine is probably the only time I need Terminal.app.</p>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-25-automated-os-x-provisioning.html</guid><pubDate>Tue, 25 Aug 2015 15:16:44 GMT</pubDate></item><item><title>I installed BlockParty, and the only thing I can say is WOW</title><link>http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html</link><description><![CDATA[

<p><strong>09/18/2015 update.</strong> Okay, <a href="http://www.marco.org/2015/09/18/just-doesnt-feel-good">Peace has been pulled</a>. Guess I'll keep using it for a while, though.</p>
<hr/>
<p><strong>09/17/2015 update.</strong> I'm now running <a href="http://www.marco.org/2015/09/16/peace-content-blocker">Marco Arment's</a> <a href="https://itunes.apple.com/us/app/peace-block-ads-trackers-powered/id1031035630?mt=8">Peace</a>, powered by Ghostery.</p>
<hr/>
<p>I just let out <a href="http://zmwangx.github.io/blog/2015-08-20-ios-9-turn-off-wi-fi-assist.html">a load of complaints about iOS 9 beta</a> last night, but apparently forgot about one nice thing: <a href="https://developer.apple.com/videos/wwdc/2015/?id=511">Safari content blocking</a>.</p>
<p>In this day and age, not being iOS/OS X developers ourselves won't stop the rest of us from obtaining ObjC/Swift source code.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html#fn1" id="fnref1"><sup>1</sup></a> I simply typed "Safari content blocker" into GitHub's search box, and there it popped, the most starred repo relevant to my search, <a href="https://github.com/krishkumar/BlockParty">krishkumar/BlockParty</a>. Thanks to Apple's new sideloading policy in Xcode 7, I was able to immediately test it out on my phone.</p>
<p>The effect is just amazing. In my few minutes of browsing, I did not seem to encounter a single ad (on various consistently ad-laden news sites). You should definitely give it a shot. What's even more amazing is that BlockParty's <a href="https://github.com/krishkumar/BlockParty/blob/master/RediffBlock/blockerList.json"><code>blockList.json</code></a>, at the time of writing, is only 1578 lines long &#8212; a JSON array with 197 objects. <strong>Only 197 rules, blocking 197 domains.</strong> Compare that to <a href="https://easylist-downloads.adblockplus.org/easylist.txt">EasyList</a>, which at the moment is a <strong>48820 line monster</strong>. Of course, EasyList is much more fine-grained (<a href="https://adblockplus.org/blog/content-blocking-in-safari-9-and-ios-9-good-news-or-the-death-knell-of-ad-blocking-on-safari">as are AdBlockPlus's filtering mechanisms</a>); with BlockParty I can actually see some blank boxes that used to host ads. But still, very impressive. Many thanks to <a href="https://github.com/krishkumar">@krishkumar</a> for publishing BlockParty, and to <a href="https://medium.com/@searls/installing-a-content-blocker-on-ios-9-public-beta-a25b2b83848f">Justin Searls</a> for publishing a detailed tutorial.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html#fn2" id="fnref2"><sup>2</sup></a></p>
<p>197 domains made our online lives so miserable. Hmm.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Actually developing a Safari content blocker extension is as easy as writing a JSON blocker list, but I'm not sure if you need an app with a UI to support the extension. Anyway, there are professional iOS developers out there ready to share the code, so I'll just happily join for a ride.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Without which I would have been scratching my head, not knowing that I had to go to Settings-&gt;General-&gt;Profiles to trust my personal profile.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html#fnref2">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-20-i-installed-blockparty-and-the-only-thing-i-can-say-is-wow.html</guid><pubDate>Fri, 21 Aug 2015 03:58:55 GMT</pubDate></item><item><title>iOS 9: turn off Wi-Fi Assist!</title><link>http://zmwangx.github.io/blog/2015-08-20-ios-9-turn-off-wi-fi-assist.html</link><description><![CDATA[

<p>Seriously. Go to Settings-&gt;Cellular, and scroll all the way down to reveal the "Wi-Fi Assist" switch. See screenshot at the end of the post. You'll see a description:</p>
<blockquote>
<p>Automatically use cellular data when Wi-Fi connectivity is poor.</p>
</blockquote>
<p>Switch that off, if you occasionally have shitty Wi-Fi (that kinda works anyway) and at all care about your cellular data usage.</p>
<p>I'll tell my horror story now. Background info: I have unlimited voice and text plus 300 MB data per month, since I've got Wi-Fi almost everywhere I go. Granted, school Wi-Fi (especially dorm) is shitty and drops all the time, but I'm not a streaming-music-on-mobile person, so the Wi-Fi is mostly fine for checking emails, browsing the Web (yes, even <a href="http://murphyapps.co/blog/2015/6/24/an-hour-with-safari-content-blocker-in-ios-9">iMore</a> or <a href="http://blog.lmorchard.com/2015/07/22/the-verge-web-sucks/">The Verge</a> kind of Web), getting push notifications, or even downloading a few podcasts on the go. I usually end up using less than 200 MB of cellular data per month.</p>
<p>However, at the beginning of August (on iOS 9 Public Beta 2 at that time), I somehow managed to burn through 200 MB in four or five days, with consistent daily stats, <em>while I did nothing special, at least not actively</em>. The timing overlaps with when I got my Apple Watch; I don't know if that's a coincidence. Anyway, more than 90% of that usage was under System Services-&gt;Documents &amp; Sync, which I could do nothing about. I had to turn off cellular data until almost the end of my billing cycle, when I stumbled upon the "Wi-Fi Assist" setting. Since then, I only used 4.8 MB &#8212; with 1.5 MB for System Services &#8212; in four days. Hardly a coincidence, I'd say.</p>
<p>In fact, I was pretty delighted when I heard about the ability to auto fallback to LTE when one's on the fringe of Wi-Fi in <a href="https://developer.apple.com/videos/wwdc/2015/?id=719">WWDC '15 Session 719</a> ("Your App and the Next Generation Networks"). However, without another likely suspect, I guess what happened in reality was that when I was sitting in the center of a shitty Wi-Fi, with the system trying to do some background job involving a network connection, it just kept trying to connect via LTE, which probably beat the shitty Wi-Fi consistently. It would be nice if one day our phones would be aware of our data plans (realize that not every one is on a $100/mo 15 GB plan) and throttle its usage wisely.</p>
<p>Anyway, I simply can't understand why the "Wi-Fi Assist" switch, a general system-wide option, appears at the end of Cellular settings, after all the per-app nickel-and-dime settings and statistics. It's nearly impossible to find. Generic settings should be at the top, period.</p>
<p>By the way, I have a lot of gripes about iOS 9 Beta. Maybe I shouldn't whine about beta software &#8212; I never used another iOS beta before so maybe they were even worse &#8212; but I can't help it because this was supposed to be a stability release. Several things immediately jumped to my mind (all present in the latest Public Beta 3), without even trying:</p>
<ul>
<li><p><a href="http://zmwangx.github.io/blog/2015-06-26-ios-9-searchable-settings.html">Searchable settings</a> is a scam. Many items can't be found. For instance, good luck searching for "Wi-Fi Assist". I wonder if the search index is hand-crafted. Also, you can't pull down to search from any screen; you have to go back, back, back, back to the main settings screen, and even then it begins with your last search, even if you're done with it. Ewww.</p></li>
<li><p>Scrolling and switching screens feels janky (system-wide) even on iPhone 6 Plus, supposedly a powerhouse.</p></li>
<li><p>The Music app is indeed totally screwed up (this actually dates back to iOS 8.4). It's so much harder than previous versions.</p>
<p>Dude, give me my old UI with selectable categories on the bottom bar if I've turned off Apple Music, okay? Do I have to put up with the Radio and Connect tabs, completely useless for me? Switching categories &#8212; by which I mean artists, albums, songs genres, etc. &#8212; is infinitely harder now, because you have to scroll all the way up to the top of a category in order to reveal the category selector, which has a dropdown arrow outside but isn't really a dropdown.</p>
<p>And may I go straight to the artwork and playback control screen when I tap to play a song? Damn, when I select and play a song of course I want see the song front and center; don't treat me like an indecisive guy.</p>
<p>And may I kindly request that the artwork does not protrude to the status bar &#8212; you do realize some artworks have white or light backgrounds, rendering the status bar unreadable?</p>
<p>Recently I also noticed that all my old iTunes purchases are showing up and screwing my library. There used to be a switch in System Preferences, the right place for this kind of settings on iOS, but it's since be removed in favor of Apple Music stuff (not sure why they are mutually exclusive), and strangely put in the category switcher. Hell, this abomination is even documented in <a href="https://support.apple.com/en-us/HT204951">"Using the new Music app"</a>; here's <a href="https://i.imgur.com/RJKLqPo.jpg">Apple's official screenshot</a> showing off the stupid category switcher. For me without Apple Music, the switch says "Show iTunes Purchases" instead of "Show Music Available Offline". Pretty clear, huh, not bad. But don't bother, it does absolutely nothing for me.</p></li>
</ul>
<p>I could go on and on and on, but I don't want to waste more time on this crap. The gist is that I'm not impressed by iOS 9 at all at the moment (oh, one thing positive: San Francisco is nice). Hopefully the final release would be in much better shape; but I don't see any hope for the Music mess &#8212; it's not likely to be cleaned up any time soon. I mourn for the old Music app, which is likely gone forever.</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150819-ios9-wifi-assist.png" target="_blank"><img alt='The "Wi-Fi Assist" switch, hidden below per-app settings.' src="http://zmwangx.github.io/img/20150819-ios9-wifi-assist.png"/></a>
<p class="caption">The "Wi-Fi Assist" switch, hidden below per-app settings.</p>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-20-ios-9-turn-off-wi-fi-assist.html</guid><pubDate>Thu, 20 Aug 2015 08:01:57 GMT</pubDate></item><item><title>Laymen</title><link>http://zmwangx.github.io/blog/2015-08-14-laymen.html</link><description><![CDATA[

<p>I always cringe when I see laymen discussing physics in comments sections of news websites. A typical situation: one commentator put together a sentence with all physics-sounding (kind of) terms he's ever heard of; the next commentator "agrees" with the previous one, adding something that sounds more reasonable (to folks who've never taken high school physics) but unfortunately violates the first law of thermodynamics; then yet another guy comes along and corrects both of the above in a pedagogic tone, with an argument that violates the second law of thermodymics...</p>
<p>I cringe even more when laymen discuss mathematics, but that's much rarer compared to physics.</p>
<p>Granted, mathematics (theoretical computer science included) and theoretical physics are probably the most abstract knowledge known to human beings, but I'm beginning to wonder if there are other professionals who would also cringe when I myself is discussing something outside my domain of expertise. Or when a better mathematician or physicist listens in on my baby talks with someone on the roughly same level.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-14-laymen.html</guid><pubDate>Sat, 15 Aug 2015 01:32:13 GMT</pubDate></item><item><title>Other people's ___</title><link>http://zmwangx.github.io/blog/2015-08-13-other-peoples-___.html</link><description><![CDATA[

<p>Often enough we look at other people's ___ (fill in the blank here) and say wow, but more often than not when we actually get to lay our hands on it, we find it less than impressive or even super annoying, and end up having nothing to say but meh. For Zsh geeks, examples include other people's Zsh prompts<a href="https://github.com/chauncey-garrett/zsh-prompt-garrett" style="text-decoration: none">,</a> zsh-syntax-highlighting, and zsh-autosuggestions.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-13-other-peoples-___.html</guid><pubDate>Thu, 13 Aug 2015 09:00:24 GMT</pubDate></item><item><title>Switching to capitalized commit messages</title><link>http://zmwangx.github.io/blog/2015-08-05-switching-to-capitalized-commit-messages.html</link><description><![CDATA[

<p>This post is a note to self.</p>
<p>As a long time git user, I've always used lowercase commit messages (in the subject line). I never quite liked the idea of capitalized commit messages, which are seldom complete sentences (and they are never period-terminated). Similarly, I avoid capilatization like hell in comments, unless when I write complete sentences. By the way, there's a technical advantage of writing lowercase commit messages: I can easily tell my human-made commits from auto commits like merge and revert commits, because they always begin with a capitalized "Merge", "Revert", etc.</p>
<p>However, most of the projects I've contributed to seem to prefer capitalized commit messages, and by following my own habit, quite often I would go through the "oh crap I messed up the contribution guidelines" realization and had to amend my commits after the fact. Also, when I open a single-commit pull request on GitHub, the subject line of the commit message automatically becomes the subject line of the pull request, and I want my pull requests to have capitalized subject lines. Perhaps I come off as self-contradictory here: lowercase commit message, but capitalized PR subject? I don't know. Maybe a PR subject is more like a real "title". Also, I blame the font: lowercase subject lines don't look remotely as good in, say, Helvetica (which GitHub currently uses for PR and commit message subject lines), as in a good fixed width font, which is what I get when I run any <code>git-log</code> variant in a terminal.</p>
<p>Anyway, lowercase commit messages isn't a particularly strong preference of mine, so I'm happy to change my habit from this day onward. Anyone can feel free to tease me if they see me write a lowercase commit message again (unless its in the format <code>component: changes</code>). In light of this, I've already <a href="https://github.com/zmwangx/zmwangx.github.io/commit/297225f2ab8a6db4fe75643f511f52499b052aa7">changed the message format</a> of <code>pyblog</code>'s auto commits, which is how I generate this blog.</p>
<p>P.S. To be fair to me, <em>Pro Git</em>, the official git tutorial, <a href="https://github.com/progit/progit2/blob/6d9867ff2394cb8a08fa3e013b082a7ae547b8af/book/02-git-basics/sections/viewing-history.asc#viewing-the-commit-history">uses lowercase commit messages</a> (I guess that's just the personal preference of Scott Chacon &#8212; not mandated by anyone). To be fair to the other side, <a href="https://github.com/git/git/commit/e83c5163316f89bfbde7d9ab23ca2e25604af290"><code>git.git</code> mostly uses capitalized commit messages</a>.</p>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-05-switching-to-capitalized-commit-messages.html</guid><pubDate>Thu, 06 Aug 2015 02:38:37 GMT</pubDate></item><item><title>Should Apple split up iTunes on OS X?</title><link>http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html</link><description><![CDATA[

<p>These days everyone seems to be talking about how complicated iTunes is and how Apple should give it a clean-sheet rewrite. This is not new, but the argument has certainly intensified ever since the introduction of iCloud Photo Library and Apple Music. For one recent example, see <a href="http://www.marco.org/2015/07/26/dont-order-the-fish">Don't order the fish</a> by Marco Arment. I was listening to John Gruber's <a href="https://daringfireball.net/thetalkshow/2015/07/29/ep-127">The Talk Show episode 127</a> earlier today (a little bit late to the game, yeah), and the complexity argument was brought up yet again.</p>
<p>I just can't buy that argument. (Disclaimer: in this post I'm talking about UI/UX, not the backend.) Granted, there are many tabs in iTunes. There's one for music, one for movies, one for TV shows, one for podcasts, one for iOS apps, one for each iOS device currently connected via USB, and so on. You can hide some of them if you don't use them. And for each of these tabs there are probably subtabs, and occasionally a sidebar. This might sound rather intimidating to the faint-hearted, but if you really dive into iTunes, you'll find that 99% of the functionalities you'll ever need to find or organize your stuff are under four clicks away<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn1" id="fnref1"><sup>1</sup></a>, and editing metadata (including batch editing) is pretty easy too. All in all, iTunes as it currently stands is both powerful (too many things on the plate, in some people's words) and not badly complicated, in the sense that you can certainly find your way around if you try. Some would argue that some of iTunes' features get shuffled into different places from version to version; yeah that's annoying, but in reality it usually takes less than five minutes to find all I need in a new version.</p>
<p>For people who just buy their content from iTunes Store<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn2" id="fnref2"><sup>2</sup></a> and never organize again, there are probably too many unnecessary subtabs and sidebars, but hey, do they need to touch these controls at all? There's a search bar that works reasonably well accross the entire content library<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn3" id="fnref3"><sup>3</sup></a>. For people who do organize their stuff, or do routinely import music and videos from outside, or do sync their devices via USB, most of those controls are great and necessary.</p>
<p>One disclaimer, by the way: maybe Apple Music made things more confusing. I don't know because I didn't even sign up for the free trial.</p>
<p>Now think about splitting up iTunes. As on iOS, you get a Music app, a Videos app, a Podcast app, an iTunes U app, and a separate iTunes Store app. Probably yet another one for managing your iOS devices, since that belongs to none of the above. So, what do you save by having all those apps? You save one click when you switch focus to another area? Well, not even that at times: now you need to switch apps. Moreover, what if I use several of those routinely (I do)? Do I have to keep all of them on my dock? Even if I don't keep them in Dock, as long as they're open they'll show up anyway, and that would be beyond horrible for people who care about their docks. This is my current dock:</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150805-my-current-dock.png" target="_blank"><img alt="My current Dock. Note that I have the old red iTunes icon from 12.1, because I really can't stand the white one from 12.2. I know that's the future in El Capitan and iOS 9 (it looks reasonable on iOS 9 by the way, I've been using public betas since day one), but I'll just be stubborn this time, without much real cost." src="http://zmwangx.github.io/img/20150805-my-current-dock.png"/></a>
<p class="caption">My current Dock. Note that I have the old red iTunes icon from 12.1, because I really can't stand the white one from 12.2. I know that's the future in El Capitan and iOS 9 (it looks reasonable on iOS 9 by the way, I've been using public betas since day one), but I'll just be stubborn this time, without much real cost.</p>
</div>
<p>iTunes, where I playback music and manage my entire content library<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn4" id="fnref4"><sup>4</sup></a>, nicely takes up only one slot, which is the most reasonable thing to have. On iOS where apps can't have too many tabs or subtabs, it certainly makes sense to split the functionalities; on OS X where you do have space to host those tabs or subtabs, I fail to see how complexity warrants refactoring, especially when refactoring would introduce other problems.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn5" id="fnref5"><sup>5</sup></a> <a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn6" id="fnref6"><sup>6</sup></a></p>
<p>Speaking of complexity, iTunes isn't even remotely as complex as, say, Microsoft Word or Adobe Photoshop. Those are of course nightmares to most people, but the point is that iTunes isn't a nightmare &#8212; it's pretty manageable, especially to power users and developers, who are the ones complaining most loudly. Also, nothing can beat the complexity of the web browser. We browse all kinds of web pages and use all kinds of web apps everyday, all inside the browser, which can hold arbitrarily many tabs with completely different UIs. We don't complain about the browser. Then why do we complain about iTunes, which is a consistent mix of essential functionalities across different areas of our multimedia experience?</p>
<p>It's true that everyone has their iTunes pet peeves. For instance, I hate the stupid new icon and the useless Apple Music related tabs that I can't turn off in 12.2. The biggest gripe I have with 12.2 is probably the small, hardly noticeable rotating circle at the far upper-right corner of the window,<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fn7" id="fnref7"><sup>7</sup></a> which now hosts the progress indicators of certain IO operations such as downloads and copying files to devices. To me it's a step backwards. Previously downloads was in a separate popup window and file copying had a place in the central area, visible whichever app you are in, but now I have to look for the visual indicator and all of a sudden remember that oh, it has been moved to that remote corner; even then I have to keep focus on iTunes, or the progress indicator dropdown would disappear. It seems all random that the progress of device syncing (and any copy operations initiated as part of the sync) should be front and center, while manually copying files to apps should retreat to the corner. Nevertheless, these minor or not-so-minor annoyances (honestly annoyances exist in almost every app) doesn't justify an iOS-like approach, which has its own drawbacks. I would be really mad if one day I need to run multiple apps just to manage the stuff on my phone.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>Just a rough estimate off the top of my head; please don't challenge me or hold me responsible.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>I'm actually increasingly inclined to this approach. Having lossless music shipped on CDs (sometimes with extra goodies) is nice, but having age-old CDs and goodies lying around, taking up space and gathering dust is less enjoyable.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref2">&#8617;&#65038;</a></p></li>
<li id="fn3"><p>"Reasonably well" at least on my not-so-large content library.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref3">&#8617;&#65038;</a></p></li>
<li id="fn4"><p>I should probably say "my entire content library visible to iOS" instead, since my non-ITMS, DRM-free videos are mostly not in iTunes. It certainly can't keep my Matroska videos anyway.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref4">&#8617;&#65038;</a></p></li>
<li id="fn5"><p>For instance, where should music videos live?<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref5">&#8617;&#65038;</a></p></li>
<li id="fn6"><p>By the way, Microsoft seems to have a split experience in Windows 10. Do people like it? The answer seems to be no.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref6">&#8617;&#65038;</a></p></li>
<li id="fn7"><p>Previously what would appear in that corner is the downloads icon, but anyone who has experienced both versions would tell you that the downloads icon is at least much more visible than the new rotating circle. The downloads icon was a dark gray blob, whereas the new thing is a few thin arcs.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html#fnref7">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-05-should-apple-split-up-itunes-on-os-x.html</guid><pubDate>Wed, 05 Aug 2015 21:09:51 GMT</pubDate></item><item><title>Sync Chrome bookmarks with Safari on OS X</title><link>http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html</link><description><![CDATA[

<p><strong>08/11/2015 Update:</strong> I have taken down the project from GitHub since it's way too flaky. Guess I'll stick with manually clicking around then...</p>
<hr/>
<p><strong>TL;DR</strong>: <a href="https://github.com/zmwangx/safari-sync-chrome-bookmarks">zmwangx/safari-sync-chrome-bookmarks</a> (now defunct; see update above).</p>
<hr/>
<p>I've been reading quite a bit of stuff on my iPhone 6 Plus these days, especially since I got my Apple Watch (not quite sure why these two things are correlated, but they are). I used to read subscribed content in Feedly, but abandoned that a while ago since Feedly does an unbearably bad job at updating my one-subscriber feeds,<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn1" id="fnref1"><sup>1</sup></a> e.g., Ars Premier feed, GitHub release feeds, etc. Ever since then, I've been rocking a local Leaf engine on my Mac but lost access on my phone,<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn2" id="fnref2"><sup>2</sup></a> and had to rely on bookmarks.</p>
<p>However, as a Chrome user on the desktop and only on the desktop (iOS Chrome sucks), I have trouble getting my Chrome bookmarks into mobile Safari. Apple developed an <a href="https://chrome.google.com/webstore/detail/icloud-bookmarks/fkepacicchenbjecpbpbclokcabebhah?hl=en">iCloud Bookmarks</a> extension for Chrome that allegedly syncs your bookmarks to iCloud<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn3" id="fnref3"><sup>3</sup></a>, but upon installing the extension for Mac Chrome, an error message pops up:</p>
<blockquote>
<p>The extension you are trying to install is designed to run on Windows 7 or 8. If you are using a Mac, your Safari bookmarks will automatically sync with your iPhone, iPad, and Mac when you sign in to iCloud on all your devices.</p>
</blockquote>
<p>The message is pretty clear: you have access to our browser, so you either use our browser or go fuck yourself.</p>
<p>So, what's next? Fortunately, recent versions of Safari (I'm currently running 8.0.7) has an import feature that comes in handy and does a pretty good job: "File -&gt; Import From -&gt; Google Chrome..." which lets you import either history or bookmarks or both. Once they are imported into desktop Safari, iCloud is pretty good at pushing it to mobile. I have no problem importing both, but the idea that I'll have to launch Safari and click click click click just to sync my bookmarks is beyond horrible.</p>
<p>Okay, remember we have another nightmare called AppleScript? And remember we have another nightmare within nightmare called GUI scripting? Yes, here's what we could do:</p>
<pre class="applescript"><code>#!/usr/bin/osascript
tell application "Safari" to activate
delay 1
tell application "System Events"
    tell process "Safari"
        tell menu bar 1
            tell menu bar item "File"
                tell menu "File"
                    tell menu item "Import From"
                        tell menu "Import From"
                            click menu item "Google Chrome&#8230;"
                            delay 1
                            keystroke return
                        end tell
                    end tell
                end tell
            end tell
        end tell
    end tell
end tell
delay 1
tell application "Safari" to quit</code></pre>
<p>Holy crap, look at that cascade.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn4" id="fnref4"><sup>4</sup></a> Anyway, in principle, this piece of crap works. In reality, well, it <em>sometimes</em> works. Because you know the nightmare called "assistive access", among other unreliabilities of poking around with system events:</p>
<div class="figure">
<a href="http://zmwangx.github.io/img/20150802-assistive-access-nightmare.png" target="_blank"><img alt="Familiar?" src="http://zmwangx.github.io/img/20150802-assistive-access-nightmare.png"/></a>
<p class="caption">Familiar?</p>
</div>
<p>On Yosemite at least, the pane to grant assistive access in System Preferences is three levels deep ("Security &amp; Privacy -&gt; Privacy -&gt; Accessibility"), behind an admin password, and most unfortunately, there's no way to grant access to individual executables through that pane, unless you are explicitly prompted about one, which may not happen when it should.<a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn5" id="fnref5"><sup>5</sup></a> <a class="footnoteRef" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fn6" id="fnref6"><sup>6</sup></a> There's nothing I could do apart from granting access to both Terminal.app and iTerm.app and hope for the best. Not so surprisingly, just as demonstrated in my past encounters with GUI scripting, with access granted to the terminals, whether I'll get an "assitive access" error when running the script is completely hit-or-miss. This time it works, the next time it just stalls, and yet another time it emits the error... Oh god.</p>
<p>In order to raise the rate of success, there's one other trick we could try: package the script into an Automator app. This way we can grant access to the standalone app, and that helps a bit. That's what I did in <a href="https://github.com/zmwangx/safari-sync-chrome-bookmarks">zmwangx/safari-sync-chrome-bookmarks</a>. It still occasionally get stuck, probably because I have a freaking slow spinning HDD and Safari would sometimes take forever to launch; but the accessibility problem does seem to go away (provided that you re-grant access every time you make the tiniest modification to the app).</p>
<p>Now I can throw that into my crontab (launching Safari beforehand to avoid freezing up):</p>
<pre class="crontab"><code>55 04 * * * open -g -a safari &amp;&amp; sleep 30 &amp;&amp; open -g -a safari-sync-chrome-bookmarks</code></pre>
<p>or invoke on demand.</p>
<p>Horrible solution, yes. Anything better? I would love to hear about it, but I highly doubt there's any, unless we directly work with <code>~/Library/Application Support/Google/Chrome/Default/Bookmarks</code> and <code>~/Library/Safari/Bookmarks.plist</code>. Probably a good problem to tackle though, provided that someone would sit down and understand the formats of the two files.</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn1"><p>I can understand that to reduce server load, they can't refresh the one-subscriber feeds at a rate, say, once per minute, but not being able to manually update, especially when you have a so-called "refresh" feature? Not cool. (What the manual "refresh" seems to do is to fetch Feedly's cached content.) Anyway, it's a freemium service with me running the free tier, so I can't really blame them.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref1">&#8617;&#65038;</a></p></li>
<li id="fn2"><p>Which RSS reader/service I'll use next on iOS is a question; I haven't got time to compare the various options yet. So many readers, so many aggregation services!<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref2">&#8617;&#65038;</a></p></li>
<li id="fn3"><p>And also one for Firefox, it seems<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref3">&#8617;&#65038;</a></p></li>
<li id="fn4"><p>There's another annoyance: <code>"Google Chrome&#8230;"</code> cannot be replaced with <code>"Google Chrome..."</code>, or you won't ever find that menu item.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref4">&#8617;&#65038;</a></p></li>
<li id="fn5"><p>There might be a way round through poking with the system accessibility database as root; see <a href="https://github.com/jacobsalmela/tccutil">jacobsalmela/tccutil</a>. However, until I have time to carefully evaluate the code, I'll have to stay with System Preferences.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref5">&#8617;&#65038;</a></p></li>
<li id="fn6"><p>Yes, I can understand the security concerns, but having to jump through so many hoops just to get some damned GUI scripting to work is awfully frustrating &#8212; and that's when you assume that the damned thing would just work after you jump through the hoops.<a class="footnotes-backlink" href="http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html#fnref6">&#8617;&#65038;</a></p></li>
</ol>
</div>
]]></description><author>zmwangx@gmail.com (Zhiming Wang)</author><guid isPermaLink="true">http://zmwangx.github.io/blog/2015-08-02-sync-chrome-bookmarks-with-safari-on-os-x.html</guid><pubDate>Mon, 03 Aug 2015 05:11:56 GMT</pubDate></item></channel></rss>
